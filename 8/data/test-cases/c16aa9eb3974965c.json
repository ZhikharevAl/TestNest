{"uid":"c16aa9eb3974965c","name":"Test get all entities","fullName":"tests.api.test_api.TestEntityAPI#test_get_all_entities","historyId":"9d79d9e140415fb9f4a303addeb457db","time":{"start":1727257965593,"stop":1727257965627,"duration":34},"description":"Verify that all entities can be retrieved","descriptionHtml":"<p>Verify that all entities can be retrieved</p>\n","status":"broken","statusMessage":"requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://a031-95-32-133-30.ngrok-free.app/api/getAll","statusTrace":"self = <api.test_api.TestEntityAPI object at 0x7fa1c7ed90a0>\napi_client = <services.entity.api_client.APIClient object at 0x7fa1c7ee5160>\n\n    @allure.title(\"Test get all entities\")\n    @allure.description(\"Verify that all entities can be retrieved\")\n    @pytest.mark.api\n    def test_get_all_entities(self, api_client: APIClient) -> None:\n        \"\"\"Tests that all entities can be retrieved successfully.\"\"\"\n>       entities = api_client.get_all_entities()\n\ntests/api/test_api.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/entity/api_client.py:43: in get_all_entities\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://a031-95-32-133-30.ngrok-free.app/api/getAll\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1727257965593,"stop":1727257965593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_skip_sensitive","time":{"start":1727257965593,"stop":1727257965593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Verify that all entities can be retrieved","status":"broken","statusMessage":"requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://a031-95-32-133-30.ngrok-free.app/api/getAll","statusTrace":"self = <api.test_api.TestEntityAPI object at 0x7fa1c7ed90a0>\napi_client = <services.entity.api_client.APIClient object at 0x7fa1c7ee5160>\n\n    @allure.title(\"Test get all entities\")\n    @allure.description(\"Verify that all entities can be retrieved\")\n    @pytest.mark.api\n    def test_get_all_entities(self, api_client: APIClient) -> None:\n        \"\"\"Tests that all entities can be retrieved successfully.\"\"\"\n>       entities = api_client.get_all_entities()\n\ntests/api/test_api.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nservices/entity/api_client.py:43: in get_all_entities\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [404]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://a031-95-32-133-30.ngrok-free.app/api/getAll\n\n/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py:1024: HTTPError","steps":[{"name":"Get all entities","time":{"start":1727257965593,"stop":1727257965627,"duration":34},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://a031-95-32-133-30.ngrok-free.app/api/getAll\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/home/runner/work/TestNest/TestNest/services/entity/api_client.py\", line 43, in get_all_entities\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.6/x64/lib/python3.12/site-packages/requests/models.py\", line 1024, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[{"uid":"263be202564aa601","name":"API Response","source":"263be202564aa601.txt","type":"text/plain","size":2430},{"uid":"37f7a60f7bb8fac4","name":"Status Code","source":"37f7a60f7bb8fac4.txt","type":"text/plain","size":3},{"uid":"fd4f962bd833d40b","name":"Headers","source":"fd4f962bd833d40b.txt","type":"text/plain","size":197}],"parameters":[{"name":"title","value":"None"},{"name":"verified","value":"None"},{"name":"page","value":"None"},{"name":"per_page","value":"None"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":3,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"fd4d3e709966ad0c","name":"log","source":"fd4d3e709966ad0c.txt","type":"text/plain","size":521},{"uid":"1033d9bb989c42bc","name":"stderr","source":"1033d9bb989c42bc.txt","type":"text/plain","size":416}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":5,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Entity Management"},{"name":"feature","value":"CRUD Operations"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestEntityAPI"},{"name":"host","value":"fv-az1490-494"},{"name":"thread","value":"2253-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["api"]},"source":"c16aa9eb3974965c.json","parameterValues":[]}